/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AppLayoutRouteImport } from './routes/_appLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppLayoutSettingsRouteImport } from './routes/_appLayout/settings'
import { Route as AppLayoutProjectsRouteImport } from './routes/_appLayout/projects'
import { Route as AppLayoutInlaysRouteImport } from './routes/_appLayout/inlays'
import { Route as AppLayoutDashboardRouteImport } from './routes/_appLayout/dashboard'
import { Route as AppLayoutAdminRouteImport } from './routes/_appLayout/admin'
import { Route as AppLayoutProjectsCreateProjectRouteImport } from './routes/_appLayout/projects_.create-project'
import { Route as AppLayoutProjectsIdRouteImport } from './routes/_appLayout/projects_.$id'
import { Route as AppLayoutDealershipIdRouteImport } from './routes/_appLayout/dealership.$id'
import { Route as AppLayoutAdminUsersRouteImport } from './routes/_appLayout/admin.users'
import { Route as AppLayoutAdminDealershipsRouteImport } from './routes/_appLayout/admin.dealerships'
import { Route as AppLayoutProjectsCreateProjectIndexRouteImport } from './routes/_appLayout/projects_.create-project.index'
import { Route as AppLayoutProjectsCreateProjectAddInlayRouteImport } from './routes/_appLayout/projects_.create-project.add-inlay'
import { Route as AppLayoutDealershipIdUsersRouteImport } from './routes/_appLayout/dealership.$id.users'
import { Route as AppLayoutDealershipIdSettingsRouteImport } from './routes/_appLayout/dealership.$id.settings'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_appLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppLayoutSettingsRoute = AppLayoutSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutProjectsRoute = AppLayoutProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutInlaysRoute = AppLayoutInlaysRouteImport.update({
  id: '/inlays',
  path: '/inlays',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutDashboardRoute = AppLayoutDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutAdminRoute = AppLayoutAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutProjectsCreateProjectRoute =
  AppLayoutProjectsCreateProjectRouteImport.update({
    id: '/projects_/create-project',
    path: '/projects/create-project',
    getParentRoute: () => AppLayoutRoute,
  } as any)
const AppLayoutProjectsIdRoute = AppLayoutProjectsIdRouteImport.update({
  id: '/projects_/$id',
  path: '/projects/$id',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutDealershipIdRoute = AppLayoutDealershipIdRouteImport.update({
  id: '/dealership/$id',
  path: '/dealership/$id',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLayoutAdminUsersRoute = AppLayoutAdminUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AppLayoutAdminRoute,
} as any)
const AppLayoutAdminDealershipsRoute =
  AppLayoutAdminDealershipsRouteImport.update({
    id: '/dealerships',
    path: '/dealerships',
    getParentRoute: () => AppLayoutAdminRoute,
  } as any)
const AppLayoutProjectsCreateProjectIndexRoute =
  AppLayoutProjectsCreateProjectIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AppLayoutProjectsCreateProjectRoute,
  } as any)
const AppLayoutProjectsCreateProjectAddInlayRoute =
  AppLayoutProjectsCreateProjectAddInlayRouteImport.update({
    id: '/add-inlay',
    path: '/add-inlay',
    getParentRoute: () => AppLayoutProjectsCreateProjectRoute,
  } as any)
const AppLayoutDealershipIdUsersRoute =
  AppLayoutDealershipIdUsersRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => AppLayoutDealershipIdRoute,
  } as any)
const AppLayoutDealershipIdSettingsRoute =
  AppLayoutDealershipIdSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AppLayoutDealershipIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin': typeof AppLayoutAdminRouteWithChildren
  '/dashboard': typeof AppLayoutDashboardRoute
  '/inlays': typeof AppLayoutInlaysRoute
  '/projects': typeof AppLayoutProjectsRoute
  '/settings': typeof AppLayoutSettingsRoute
  '/admin/dealerships': typeof AppLayoutAdminDealershipsRoute
  '/admin/users': typeof AppLayoutAdminUsersRoute
  '/dealership/$id': typeof AppLayoutDealershipIdRouteWithChildren
  '/projects/$id': typeof AppLayoutProjectsIdRoute
  '/projects/create-project': typeof AppLayoutProjectsCreateProjectRouteWithChildren
  '/dealership/$id/settings': typeof AppLayoutDealershipIdSettingsRoute
  '/dealership/$id/users': typeof AppLayoutDealershipIdUsersRoute
  '/projects/create-project/add-inlay': typeof AppLayoutProjectsCreateProjectAddInlayRoute
  '/projects/create-project/': typeof AppLayoutProjectsCreateProjectIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin': typeof AppLayoutAdminRouteWithChildren
  '/dashboard': typeof AppLayoutDashboardRoute
  '/inlays': typeof AppLayoutInlaysRoute
  '/projects': typeof AppLayoutProjectsRoute
  '/settings': typeof AppLayoutSettingsRoute
  '/admin/dealerships': typeof AppLayoutAdminDealershipsRoute
  '/admin/users': typeof AppLayoutAdminUsersRoute
  '/dealership/$id': typeof AppLayoutDealershipIdRouteWithChildren
  '/projects/$id': typeof AppLayoutProjectsIdRoute
  '/dealership/$id/settings': typeof AppLayoutDealershipIdSettingsRoute
  '/dealership/$id/users': typeof AppLayoutDealershipIdUsersRoute
  '/projects/create-project/add-inlay': typeof AppLayoutProjectsCreateProjectAddInlayRoute
  '/projects/create-project': typeof AppLayoutProjectsCreateProjectIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_appLayout': typeof AppLayoutRouteWithChildren
  '/login': typeof LoginRoute
  '/_appLayout/admin': typeof AppLayoutAdminRouteWithChildren
  '/_appLayout/dashboard': typeof AppLayoutDashboardRoute
  '/_appLayout/inlays': typeof AppLayoutInlaysRoute
  '/_appLayout/projects': typeof AppLayoutProjectsRoute
  '/_appLayout/settings': typeof AppLayoutSettingsRoute
  '/_appLayout/admin/dealerships': typeof AppLayoutAdminDealershipsRoute
  '/_appLayout/admin/users': typeof AppLayoutAdminUsersRoute
  '/_appLayout/dealership/$id': typeof AppLayoutDealershipIdRouteWithChildren
  '/_appLayout/projects_/$id': typeof AppLayoutProjectsIdRoute
  '/_appLayout/projects_/create-project': typeof AppLayoutProjectsCreateProjectRouteWithChildren
  '/_appLayout/dealership/$id/settings': typeof AppLayoutDealershipIdSettingsRoute
  '/_appLayout/dealership/$id/users': typeof AppLayoutDealershipIdUsersRoute
  '/_appLayout/projects_/create-project/add-inlay': typeof AppLayoutProjectsCreateProjectAddInlayRoute
  '/_appLayout/projects_/create-project/': typeof AppLayoutProjectsCreateProjectIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/admin'
    | '/dashboard'
    | '/inlays'
    | '/projects'
    | '/settings'
    | '/admin/dealerships'
    | '/admin/users'
    | '/dealership/$id'
    | '/projects/$id'
    | '/projects/create-project'
    | '/dealership/$id/settings'
    | '/dealership/$id/users'
    | '/projects/create-project/add-inlay'
    | '/projects/create-project/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/admin'
    | '/dashboard'
    | '/inlays'
    | '/projects'
    | '/settings'
    | '/admin/dealerships'
    | '/admin/users'
    | '/dealership/$id'
    | '/projects/$id'
    | '/dealership/$id/settings'
    | '/dealership/$id/users'
    | '/projects/create-project/add-inlay'
    | '/projects/create-project'
  id:
    | '__root__'
    | '/'
    | '/_appLayout'
    | '/login'
    | '/_appLayout/admin'
    | '/_appLayout/dashboard'
    | '/_appLayout/inlays'
    | '/_appLayout/projects'
    | '/_appLayout/settings'
    | '/_appLayout/admin/dealerships'
    | '/_appLayout/admin/users'
    | '/_appLayout/dealership/$id'
    | '/_appLayout/projects_/$id'
    | '/_appLayout/projects_/create-project'
    | '/_appLayout/dealership/$id/settings'
    | '/_appLayout/dealership/$id/users'
    | '/_appLayout/projects_/create-project/add-inlay'
    | '/_appLayout/projects_/create-project/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_appLayout': {
      id: '/_appLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_appLayout/settings': {
      id: '/_appLayout/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppLayoutSettingsRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/projects': {
      id: '/_appLayout/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AppLayoutProjectsRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/inlays': {
      id: '/_appLayout/inlays'
      path: '/inlays'
      fullPath: '/inlays'
      preLoaderRoute: typeof AppLayoutInlaysRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/dashboard': {
      id: '/_appLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppLayoutDashboardRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/admin': {
      id: '/_appLayout/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AppLayoutAdminRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/projects_/create-project': {
      id: '/_appLayout/projects_/create-project'
      path: '/projects/create-project'
      fullPath: '/projects/create-project'
      preLoaderRoute: typeof AppLayoutProjectsCreateProjectRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/projects_/$id': {
      id: '/_appLayout/projects_/$id'
      path: '/projects/$id'
      fullPath: '/projects/$id'
      preLoaderRoute: typeof AppLayoutProjectsIdRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/dealership/$id': {
      id: '/_appLayout/dealership/$id'
      path: '/dealership/$id'
      fullPath: '/dealership/$id'
      preLoaderRoute: typeof AppLayoutDealershipIdRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_appLayout/admin/users': {
      id: '/_appLayout/admin/users'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AppLayoutAdminUsersRouteImport
      parentRoute: typeof AppLayoutAdminRoute
    }
    '/_appLayout/admin/dealerships': {
      id: '/_appLayout/admin/dealerships'
      path: '/dealerships'
      fullPath: '/admin/dealerships'
      preLoaderRoute: typeof AppLayoutAdminDealershipsRouteImport
      parentRoute: typeof AppLayoutAdminRoute
    }
    '/_appLayout/projects_/create-project/': {
      id: '/_appLayout/projects_/create-project/'
      path: '/'
      fullPath: '/projects/create-project/'
      preLoaderRoute: typeof AppLayoutProjectsCreateProjectIndexRouteImport
      parentRoute: typeof AppLayoutProjectsCreateProjectRoute
    }
    '/_appLayout/projects_/create-project/add-inlay': {
      id: '/_appLayout/projects_/create-project/add-inlay'
      path: '/add-inlay'
      fullPath: '/projects/create-project/add-inlay'
      preLoaderRoute: typeof AppLayoutProjectsCreateProjectAddInlayRouteImport
      parentRoute: typeof AppLayoutProjectsCreateProjectRoute
    }
    '/_appLayout/dealership/$id/users': {
      id: '/_appLayout/dealership/$id/users'
      path: '/users'
      fullPath: '/dealership/$id/users'
      preLoaderRoute: typeof AppLayoutDealershipIdUsersRouteImport
      parentRoute: typeof AppLayoutDealershipIdRoute
    }
    '/_appLayout/dealership/$id/settings': {
      id: '/_appLayout/dealership/$id/settings'
      path: '/settings'
      fullPath: '/dealership/$id/settings'
      preLoaderRoute: typeof AppLayoutDealershipIdSettingsRouteImport
      parentRoute: typeof AppLayoutDealershipIdRoute
    }
  }
}

interface AppLayoutAdminRouteChildren {
  AppLayoutAdminDealershipsRoute: typeof AppLayoutAdminDealershipsRoute
  AppLayoutAdminUsersRoute: typeof AppLayoutAdminUsersRoute
}

const AppLayoutAdminRouteChildren: AppLayoutAdminRouteChildren = {
  AppLayoutAdminDealershipsRoute: AppLayoutAdminDealershipsRoute,
  AppLayoutAdminUsersRoute: AppLayoutAdminUsersRoute,
}

const AppLayoutAdminRouteWithChildren = AppLayoutAdminRoute._addFileChildren(
  AppLayoutAdminRouteChildren,
)

interface AppLayoutDealershipIdRouteChildren {
  AppLayoutDealershipIdSettingsRoute: typeof AppLayoutDealershipIdSettingsRoute
  AppLayoutDealershipIdUsersRoute: typeof AppLayoutDealershipIdUsersRoute
}

const AppLayoutDealershipIdRouteChildren: AppLayoutDealershipIdRouteChildren = {
  AppLayoutDealershipIdSettingsRoute: AppLayoutDealershipIdSettingsRoute,
  AppLayoutDealershipIdUsersRoute: AppLayoutDealershipIdUsersRoute,
}

const AppLayoutDealershipIdRouteWithChildren =
  AppLayoutDealershipIdRoute._addFileChildren(
    AppLayoutDealershipIdRouteChildren,
  )

interface AppLayoutProjectsCreateProjectRouteChildren {
  AppLayoutProjectsCreateProjectAddInlayRoute: typeof AppLayoutProjectsCreateProjectAddInlayRoute
  AppLayoutProjectsCreateProjectIndexRoute: typeof AppLayoutProjectsCreateProjectIndexRoute
}

const AppLayoutProjectsCreateProjectRouteChildren: AppLayoutProjectsCreateProjectRouteChildren =
  {
    AppLayoutProjectsCreateProjectAddInlayRoute:
      AppLayoutProjectsCreateProjectAddInlayRoute,
    AppLayoutProjectsCreateProjectIndexRoute:
      AppLayoutProjectsCreateProjectIndexRoute,
  }

const AppLayoutProjectsCreateProjectRouteWithChildren =
  AppLayoutProjectsCreateProjectRoute._addFileChildren(
    AppLayoutProjectsCreateProjectRouteChildren,
  )

interface AppLayoutRouteChildren {
  AppLayoutAdminRoute: typeof AppLayoutAdminRouteWithChildren
  AppLayoutDashboardRoute: typeof AppLayoutDashboardRoute
  AppLayoutInlaysRoute: typeof AppLayoutInlaysRoute
  AppLayoutProjectsRoute: typeof AppLayoutProjectsRoute
  AppLayoutSettingsRoute: typeof AppLayoutSettingsRoute
  AppLayoutDealershipIdRoute: typeof AppLayoutDealershipIdRouteWithChildren
  AppLayoutProjectsIdRoute: typeof AppLayoutProjectsIdRoute
  AppLayoutProjectsCreateProjectRoute: typeof AppLayoutProjectsCreateProjectRouteWithChildren
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutAdminRoute: AppLayoutAdminRouteWithChildren,
  AppLayoutDashboardRoute: AppLayoutDashboardRoute,
  AppLayoutInlaysRoute: AppLayoutInlaysRoute,
  AppLayoutProjectsRoute: AppLayoutProjectsRoute,
  AppLayoutSettingsRoute: AppLayoutSettingsRoute,
  AppLayoutDealershipIdRoute: AppLayoutDealershipIdRouteWithChildren,
  AppLayoutProjectsIdRoute: AppLayoutProjectsIdRoute,
  AppLayoutProjectsCreateProjectRoute:
    AppLayoutProjectsCreateProjectRouteWithChildren,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppLayoutRoute: AppLayoutRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
